{
  "questions": [
    {
      "id": 76045555,
      "question_id": 76045555,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 76045573,
      "question_id": 76045573,
      "tags": ["c", "if-statement", "assembly", "x86"],
      "owner": {
        "account_id": 26725198,
        "reputation": 21,
        "user_id": 20328414,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a/ALm5wu2ULRYtfiA5fjDr4NNyUfo9o_tvsg0rJt0Qr0-p=k-s256",
        "display_name": "polo sop",
        "link": "https://stackoverflow.com/users/20328414/polo-sop"
      },
      "is_answered": false,
      "view_count": 18,
      "closed_date": 1681826887,
      "answer_count": 1,
      "score": 2,
      "last_activity_date": 1681826984,
      "creation_date": 1681826590,
      "last_edit_date": 1681826984,
      "link": "https://stackoverflow.com/questions/76045573/why-use-jbe-not-ja-here",
      "closed_reason": "Duplicate",
      "title": "Why use jbe not ja here?",
      "body": "<pre><code>int get_cont(int *p1, int *p2) \n{       \n    if (p1 &gt; p2)  \n        return *p2;\n    else\n        return *p1;\n}\n</code></pre>\n<p>The assembly code is:</p>\n<pre><code>    movl    8(%ebp), %eax\n    cmpl    12(%ebp), %eax\n    jbe    .L2\n    movl    12(%ebp), %eax\n    movl    (%eax), %eax\n    jmp    .L3\n</code></pre>\n<p>Why use <code>jbe</code>. The condition is <code>p1 &gt; p2</code>. Why not use <code>ja</code>?</p>\n<p><code>ja</code> and <code>jbe</code> are both unsigned jump opcode. Why did the compiler reverse the logic?</p>\n"
    },
    {
      "id": 76045535,
      "question_id": 76045535,
      "tags": ["python"],
      "owner": {
        "account_id": 28340030,
        "reputation": 1,
        "user_id": 21673185,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a/AGNmyxaS4IN5Cv8I5tUZab8WP-uDD2WZPCuFc7hYpASYlQ=k-s256",
        "display_name": "BahadÄ±r Murat",
        "link": "https://stackoverflow.com/users/21673185/bahad%c4%b1r-murat"
      },
      "is_answered": false,
      "view_count": 12,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826447,
      "creation_date": 1681826447,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045535/creating-an-array-from-first-column-of-txt-file",
      "title": "creating an array from first column of txt file",
      "body": "<p>I have a set of 2 column datas (flow, time) and I would like to create an array list of flow data. But, I couldnt figure out how to do that. Could you check my data-script?</p>\n<p>Thank you everyone</p>\n<p></p>\n"
    },
    {
      "id": 76045342,
      "tags": ["c#"],
      "owner": {
        "account_id": 22541918,
        "reputation": 361,
        "user_id": 16732381,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a/AATXAJxt8Nzfyb2rzEBQb9HzxQ0KFSk_KHQE7XaZDZrr=k-s256",
        "display_name": "Sarahrb",
        "link": "https://stackoverflow.com/users/16732381/sarahrb"
      },
      "is_answered": true,
      "view_count": 49,
      "answer_count": 2,
      "score": -1,
      "last_activity_date": 1681826299,
      "creation_date": 1681825271,
      "question_id": 76045342,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045342/check-if-the-given-string-exists-in-array",
      "title": "Check if the given string exists in array",
      "body": "<p>Trying to check if <code>Grapes</code> exists in <code>varieties</code>, but below code does not satisfy if condition, even though grapes exists in the array.</p>\n<pre><code>Public enum Type{   \n    Apple,\n    Orange,\n    Grapes  \n}\n\n\nprivate Type[] varieties = default!;\nif (varieties.Any(e =&gt; e.Equals(&quot;Grapes&quot;)))\n{\n    //Perform some operation\n}\n</code></pre>\n<p>Whereas below satisfies if condition as expected, but I do not want to hard code as <code>varieties[0]</code>.</p>\n<pre><code>if(varieties[0].ToString() == &quot;Grapes&quot;)\n{\n    //Perform some operation\n\n}\n</code></pre>\n<p>May I know the correct condition for checking this. Thank you.</p>\n"
    },
    {
      "id": 76044783,
      "question_id": 76044783,
      "tags": ["r", "dataframe", "dplyr"],
      "owner": {
        "account_id": 943728,
        "reputation": 77,
        "user_id": 971390,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/b77ff4fe4e6ee2f734ad5bb8ac360838?s=256&d=identicon&r=PG",
        "display_name": "Rafael Rocha",
        "link": "https://stackoverflow.com/users/971390/rafael-rocha"
      },
      "is_answered": true,
      "view_count": 27,
      "accepted_answer_id": 76044878,
      "answer_count": 2,
      "score": 1,
      "last_activity_date": 1681826596,
      "creation_date": 1681821902,
      "last_edit_date": 1681822662,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76044783/r-how-to-summarize-by-year-below-each-row",
      "title": "R: how to summarize by year below each row",
      "body": "<p>I got the dataframe below and the function that summarize my dataframe</p>\n<pre><code>library(dplyr)\nlibrary(tidyr)\ndf_so = data.frame(Ano=c(2017, 2017, 2017, 2018, 2018, 2018, 2019, 2019), \n                   Metodo=c(&quot;x&quot;,&quot;y&quot;,&quot;x&quot;,&quot;x&quot;,&quot;x&quot;,&quot;x&quot;,&quot;z&quot;,&quot;x&quot;))\ndf_so %&gt;%\n  group_by(Ano, Metodo) %&gt;%\n  tally()%&gt;%\n  rename(quantidade = n)%&gt;%\n  summarise(Ano = c(&quot;&quot;, Ano), Metodo = c('Total', Metodo),  \n            across(quantidade, ~c(sum(., na.rm = TRUE), .)))\n</code></pre>\n<p>So I have the result:</p>\n<pre><code>  Ano    Metodo quantidade\n  &lt;chr&gt;  &lt;chr&gt;       &lt;int&gt;\n1 &quot;&quot;     Total           3\n2 &quot;2017&quot; x               2\n3 &quot;2017&quot; y               1\n4 &quot;&quot;     Total           3\n5 &quot;2018&quot; x               3\n6 &quot;&quot;     Total           2\n7 &quot;2019&quot; x               1\n8 &quot;2019&quot; z               1\n</code></pre>\n<p>However, I would like:</p>\n<pre><code>  Ano    Metodo quantidade\n  &lt;chr&gt;  &lt;chr&gt;       &lt;int&gt;\n1 &quot;2017&quot; x               2\n2 &quot;2017&quot; y               1\n3 &quot;2017&quot; Total           3\n4 &quot;2018&quot; x               3\n5 &quot;2018&quot; Total           3\n6 &quot;2019&quot; x               1\n7 &quot;2019&quot; z               1  \n8 &quot;2019&quot; Total           2\n</code></pre>\n<p>How can I get this kind of result?</p>\n"
    },
    {
      "id": 76045285,
      "tags": ["r"],
      "owner": {
        "account_id": 9151121,
        "reputation": 2093,
        "user_id": 6805670,
        "user_type": "registered",
        "accept_rate": 90,
        "profile_image": "https://i.stack.imgur.com/DPAWh.jpg?s=256&g=1",
        "display_name": "IVIM",
        "link": "https://stackoverflow.com/users/6805670/ivim"
      },
      "is_answered": true,
      "view_count": 21,
      "closed_date": 1681825739,
      "answer_count": 2,
      "score": 0,
      "last_activity_date": 1681825706,
      "creation_date": 1681824977,
      "question_id": 76045285,
      "link": "https://stackoverflow.com/questions/76045285/how-to-recreate-a-list-in-r-so-that-its-fields-are-printed-alphabetically",
      "closed_reason": "Duplicate",
      "title": "How to recreate a list in R so that its fields are printed alphabetically?",
      "body": "<p>I have a long list which is created dynamically and looks something like this (but with many more fields)</p>\n<pre><code>  l &lt;- list()\n  l$col.in &lt;- 0\n  l$dt.in &lt;- data.frame()\n  l$col.out &lt;- 1\n  l$dt.out &lt;- data.frame()\n</code></pre>\n<p>when I print it, it shows up in order its field were populated:</p>\n<pre><code>&gt;   l\n$col.in\n[1] 0\n\n$dt.in\ndata frame with 0 columns and 0 rows\n\n$col.out\n[1] 1\n\n$dt.out\ndata frame with 0 columns and 0 rows\n</code></pre>\n<p>I need it to be printed in such a way that all  its fields showup in alphabetical order, like below:</p>\n<pre><code>&gt;   l.sorted\n$col.in\n[1] 0\n\n$col.out\n[1] 1\n\n$dt.in\ndata frame with 0 columns and 0 rows\n\n$dt.out\ndata frame with 0 columns and 0 rows\n</code></pre>\n<p>How can I do that?\nPlease create a new list l.sorted which would be printed as desired. Thank you</p>\n"
    },
    {
      "id": 76045182,
      "tags": ["python", "python-3.x", "pandas", "dataframe"],
      "owner": {
        "account_id": 5175221,
        "reputation": 75,
        "user_id": 4142591,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/-NyEH6eYFvY0/AAAAAAAAAAI/AAAAAAAABa0/NfGknr3zxqg/photo.jpg?sz=256",
        "display_name": "London-35",
        "link": "https://stackoverflow.com/users/4142591/london-35"
      },
      "is_answered": true,
      "view_count": 24,
      "accepted_answer_id": 76045407,
      "answer_count": 2,
      "score": 1,
      "last_activity_date": 1681826089,
      "creation_date": 1681824381,
      "last_edit_date": 1681825118,
      "question_id": 76045182,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045182/how-to-select-rows-within-groups-based-on-dynamic-dates",
      "title": "how to select rows within groups based on dynamic dates?",
      "body": "<p>I have the following dataframe: each participant has multiple rows and different start times. I want to select all rows within the first minute for each participant. Because each participant started at a different time, the start and end dates must be dynamic.</p>\n<pre><code> id  participant start_time   \n44414  1556    2023-04-18 09:35:41.100  \n36905  1435   2023-04-18 09:35:41.300  \n44416  1556    2023-04-18 09:35:42.100  \n44417   1556   2023-04-18 09:35:42.900  \n44418   1222   2023-04-18 09:35:43.100  \n44356   1899   2023-04-18 23:01:29.400  \n\n</code></pre>\n<p>So far, I sorted the data based on start_time, grouped it based on participant id, and later used apply to specify the data range I want my selection to follow.</p>\n<pre><code>df['start_time'] =  pd.to_datetime(df['start_time'])\n\nx = df.sort_values('start_time',ascending=True).groupby(['participant']).apply(lambda g: pd.date_range(start=df['start_time'].min(), end = df['start_time'].max(), periods=len(g),freq='60S').to_series()).values\n\n\n</code></pre>\n<p>The expected result will be: for each participant, only show rows within the first minute and exclude the rest of the entries. But, I receive the following error:</p>\n<pre><code>ValueError: Of the four parameters: start, end, periods, and freq, exactly three must be specified\n</code></pre>\n<p>How can I achieve my goal? And is there a better way to perform my target selection?</p>\n"
    },
    {
      "id": 76045078,
      "tags": ["c++", "cmake"],
      "owner": {
        "account_id": 28339026,
        "reputation": 1,
        "user_id": 21672330,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/167eb63b03903b2f6f943d5fd4e024cc?s=256&d=identicon&r=PG&f=y&so-version=2",
        "display_name": "marco",
        "link": "https://stackoverflow.com/users/21672330/marco"
      },
      "is_answered": false,
      "view_count": 34,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681823697,
      "creation_date": 1681823697,
      "question_id": 76045078,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045078/avoid-calling-unnecessary-header",
      "title": "Avoid calling unnecessary header",
      "body": "<p>Im building a simple C++ shared library called <code>testlib</code> and want to test it on a simple runtime environment.<br />\n<strong>Library consists of:</strong></p>\n<ul>\n<li>One header file <code>include/lib_header.hpp</code></li>\n<li>One src file <code>src/lib_src.cpp</code></li>\n<li>headers only 3rdparty library file <code>3rdparty/dependency_header.hpp</code></li>\n</ul>\n<p>My Cmake for the library looks like this:</p>\n<pre><code>project(testlib)\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -pthread&quot;)\n\nadd_library(testlib SHARED src/lib_src.cpp)\ntarget_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_LIST_DIR}/include \n                                           PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty)\n</code></pre>\n<p><strong>nb</strong>:</p>\n<ul>\n<li>The header file <code>include/lib_header.hpp</code> calls the <code>3rdparty/dependency_header.hpp</code>\\</li>\n<li>In my particular situation I need to first build the library then call the binary <code>testlib.so</code> for linux.\\</li>\n</ul>\n<p><strong>Runtime consists of</strong><br />\nsingle <code>main.cpp</code> calling the library. Cmake looks as follows:</p>\n<pre><code>project(runtime)\ninclude(GNUInstallDirs)\n\nset(LIBDIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/testlib CACHE STRING &quot;headers&quot;)\nset(BINDIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/testlib/build CACHE STRING &quot;.so folder&quot;)\nset(INCLUDE_DIRS \n        ${LIBDIR}/include\n        # ${LIBDIR}/3rdparty/ \n        )\nadd_library(testlib SHARED IMPORTED)\nset_target_properties(testlib PROPERTIES IMPORTED_LOCATION ${HORIZON_BIN_DIR}/libtestlib.so)\n\nadd_executable(test_runnable src/main.cpp)\ntarget_link_libraries(test_runnable PUBLIC testlib)\ntarget_include_directories(test_runnable PUBLIC ${INCLUDE_DIRS})\n</code></pre>\n<p><strong>Question</strong>: Is there a way to avoid including the <code>3rdparty</code> folder in the main file?<br />\nAs you can see, Im currently commenting the inclusion which leads to <code>No such file or directory</code>error.</p>\n<p>In the library CMake, tried the following configutations:</p>\n<ol>\n<li>setting the <code>3rdparty</code> as a private header</li>\n</ol>\n<pre><code>target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_LIST_DIR}/include \n                                           PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty)\n</code></pre>\n<ol start=\"2\">\n<li>building the library as <code>STATIC</code> instead of <code>SHARED</code></li>\n</ol>\n"
    },
    {
      "id": 76045287,
      "tags": ["python", "python-3.x"],
      "owner": {
        "account_id": 25196697,
        "reputation": 65,
        "user_id": 19036123,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/0bafbfe0659d5d6d66c6c10e639a5659?s=256&d=identicon&r=PG",
        "display_name": "jagghy",
        "link": "https://stackoverflow.com/users/19036123/jagghy"
      },
      "is_answered": false,
      "view_count": 33,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826524,
      "creation_date": 1681824999,
      "last_edit_date": 1681826524,
      "question_id": 76045287,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045287/how-to-build-back-a-splitted-and-updated-string",
      "title": "how to build back a splitted and updated string?",
      "body": "<p>with the follwing code I split a string, create a list, and given a specific pattern, substitute a random char with another one</p>\n<pre><code>comando = &quot;/bin/cat /etc/passwd&quot;\npayloadMUT1 = comando\npayloadMUT3 = re.split(r'/', payloadMUT1)\nfilteredarray = []\n\nfor i in payloadMUT3:\n    #i don't want special chars to get involved in the substitution process\n    filteredarray.extend(re.findall(r'\\b[^\\W\\d_]+\\b', i))\n    \nfor a in filteredarray:\n    \n    randomIndex = int(random.random() * len(a))\n    randomChar = a[randomIndex]  \n    payloadMUT4 = a.replace(randomChar, '?')\n</code></pre>\n<p>output:</p>\n<pre><code>?in\nca?\net?\npa??wd\n</code></pre>\n<p>how do I assemble all those values to build the whole ( updated ) string back?</p>\n<p>this is the output I'm looking for:</p>\n<pre><code>/?in/ca? /et?/pa??wd\n</code></pre>\n"
    },
    {
      "id": 76045069,
      "tags": ["python", "cv2"],
      "owner": {
        "account_id": 28339639,
        "reputation": 1,
        "user_id": 21672864,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a/AGNmyxbCAc4XeJGFgRZx6ClgFC8okT1G0M9zX9FtD0C-=k-s256",
        "display_name": "Smajy",
        "link": "https://stackoverflow.com/users/21672864/smajy"
      },
      "is_answered": true,
      "view_count": 26,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1681824113,
      "creation_date": 1681823653,
      "question_id": 76045069,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045069/modulenotfounderror-no-module-named-cv2-not-sure-what-else-to-try",
      "title": "ModuleNotFoundError: No module named &#39;cv2&#39; - Not sure what else to try",
      "body": "<p>I'm currently working on a Python project which is a very simple image classifier which uses the kNN approach. I'm required to use Python version 3.8, so I'm using an Anaconda virtual environment for this.</p>\n<p>I'm having trouble with the cv2 module, as I keep getting the following error:</p>\n<blockquote>\n<p>Traceback (most recent call last): File &quot;&quot;, line 6, in  import cv2 ModuleNotFoundError: No module named 'cv2'</p>\n</blockquote>\n<p>Here are all of my imports:</p>\n<pre><code>import argparse\nimport csv\nimport distutils.util\nimport os\nimport Dummy\nimport cv2\n\nimport numpy as np\nfrom scipy.spatial.distance import hamming, cityblock\nimport math\nfrom operator import itemgetter\n</code></pre>\n<p>Here is how im using the cv2 module:</p>\n<pre><code>def readAndResize(image_path, width=60, height=30):\n    image = []\n    resize = (width, height)\n    \n    #checking if image_path is a valid path\n    if os.path.isfile(image_path):\n        #IF TRUE: reading the image and storing in variable &quot;readImage&quot;, resizing readImage and appending it to image list\n        readImage = cv2.imread(image_path)\n        resizedImage = cv2.resize(readImage, resize)\n        image.append(resizedImage)\n        return image\n    #IF FALSE: return empty image list\n    else:        \n        return image\n</code></pre>\n<p>I really dont understand what could be causing this error.</p>\n<p>Here's what I've tried so far:</p>\n<ul>\n<li><p>pip installing opencv-Python</p>\n</li>\n<li><p>pip uninstalling and reinstalling opencv-python</p>\n</li>\n<li><p>Checking which directories Python is searching for installed packages, as well as the directory      where the packages are being installed. Everything seems to check out.</p>\n</li>\n<li><p>I even tried deleting my old venv and creating a brand new one, installing all of the packages again and still cant seem to solve or even figure out what is causing this error</p>\n</li>\n</ul>\n<p>I would really appreciate it if anyone can point me to any solutions or suggestions on how I can fix this issue. Any help would be greatly appreciated. Thank you!</p>\n"
    },
    {
      "id": 76044958,
      "tags": ["typescript", "typescript-generics"],
      "owner": {
        "account_id": 1584151,
        "reputation": 617,
        "user_id": 1468880,
        "user_type": "registered",
        "accept_rate": 50,
        "profile_image": "https://www.gravatar.com/avatar/a813438ab58f8ca83c7371d23896974a?s=256&d=identicon&r=PG",
        "display_name": "Galadre",
        "link": "https://stackoverflow.com/users/1468880/galadre"
      },
      "is_answered": true,
      "view_count": 15,
      "answer_count": 2,
      "score": 2,
      "last_activity_date": 1681824401,
      "creation_date": 1681822945,
      "question_id": 76044958,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76044958/in-typescript-how-can-i-write-a-curried-function-that-restricts-and-infers-the-o",
      "title": "In Typescript how can I write a curried function that restricts and infers the output type from the first argument?",
      "body": "<p>I'm relatively new to Typescript and was wondering: for simple curried function like: <code>const add = (a:number) =&gt; (b:number):number =&gt; a + b;</code>, is it possible to instead support both number and string input and restrict the output type to the first input type?</p>\n<p>E.g. <code>const add = (a:number | string) =&gt; (b:type of a):type of a =&gt; a + b;</code></p>\n"
    },
    {
      "id": 76045105,
      "tags": ["c++", "encoding"],
      "owner": {
        "account_id": 28339467,
        "reputation": 1,
        "user_id": 21672711,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/953004ea479181a0ffe54827360b4492?s=256&d=identicon&r=PG&f=y&so-version=2",
        "display_name": "Kroil0",
        "link": "https://stackoverflow.com/users/21672711/kroil0"
      },
      "is_answered": false,
      "view_count": 30,
      "closed_date": 1681824646,
      "answer_count": 0,
      "score": -1,
      "last_activity_date": 1681825415,
      "creation_date": 1681823879,
      "last_edit_date": 1681825415,
      "question_id": 76045105,
      "link": "https://stackoverflow.com/questions/76045105/how-to-add-data-encoding-to-the-registration-and-login-code",
      "closed_reason": "Needs details or clarity",
      "title": "How to add data encoding to the registration and login code?",
      "body": "<p>I am a beginner and I do not quite understand how to correctly add data encoding to the code below.</p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;fstream&gt;\n\nusing namespace std;\n\nclass Password\n{\npublic:\n\n    int Entrance()\n    {\n        string login = &quot;login.txt&quot;;\n        string password = &quot;password.txt&quot;;\n\n        fstream log;\n        fstream pass;\n\n        log.open(login, fstream::in | fstream::out | fstream::app);\n        pass.open(password, fstream::in | fstream::out | fstream::app);\n\n        if (!log.is_open() &amp;&amp; !pass.is_open())\n        {\n            cout &lt;&lt; &quot;Error!&quot; &lt;&lt; endl;\n        }\n        else\n        {\n            string log_cheker;\n            string pass_cheker;\n\n            while (!log.eof()) \n            {\n                log_cheker = &quot;&quot;;\n                log &gt;&gt; log_cheker;\n            }\n            while (!pass.eof())\n            {\n                pass_cheker = &quot;&quot;;\n                pass &gt;&gt; pass_cheker;\n            }\n\n            string login_correct;\n            string pass_correct;\n\n            cout &lt;&lt; &quot;Enter your login: &quot;; cin &gt;&gt; login_correct;\n            cout &lt;&lt; endl;\n            cout &lt;&lt; &quot;Enter your password: &quot;; cin &gt;&gt; pass_correct;\n\n            if (login_correct != log_cheker &amp;&amp; pass_correct != pass_cheker)\n            {\n                cout &lt;&lt; &quot;Password or Login entered incorrectly!&quot; &lt;&lt; endl;\n            }\n            else\n            {\n                cout &lt;&lt; &quot;The data entered is correct!&quot; &lt;&lt; endl;\n            }\n            return 0;\n        }\n    }\n    int Sign_up()\n    {\n        string login = &quot;login.txt&quot;;\n        string password = &quot;password.txt&quot;;\n\n        fstream log;\n        fstream pass;\n\n        log.open(login, fstream::in | fstream::out | fstream::app);\n        pass.open(password, fstream::in | fstream::out | fstream::app);\n\n        if (!log.is_open() &amp;&amp; !pass.is_open())\n        {\n            cout &lt;&lt; &quot;Error!&quot; &lt;&lt; endl;\n        }\n        else\n        {\n            string log_cheker;\n            string pass_cheker;\n            cout &lt;&lt; &quot;Enter your login: &quot;; cin &gt;&gt; log_cheker;\n            cout &lt;&lt; endl;\n            cout &lt;&lt; &quot;Enter your password: &quot;; cin &gt;&gt; pass_cheker;\n\n            log &lt;&lt; log_cheker;\n            pass &lt;&lt; pass_cheker;\n\n            cout &lt;&lt; &quot;Registration completed successfully!&quot; &lt;&lt; endl;\n\n            return 0;\n\n        }\n    }\n\n};\nclass menu\n{\npublic:\n\n    int RunMenu()\n    {\n        int punkt;\n        cout &lt;&lt; &quot;Welcome!&quot; &lt;&lt; endl;\n        cout &lt;&lt; &quot;1.Log in&quot; &lt;&lt; endl;\n        cout &lt;&lt; &quot;2.Sing up&quot; &lt;&lt; endl;\n        cin &gt;&gt; punkt;\n\n        if (punkt != 1 &amp;&amp; punkt != 2)\n        {\n            cout &lt;&lt; &quot;Wrong menu item selected!&quot; &lt;&lt; endl;\n        }\n        if (punkt == 1)\n        {\n            system(&quot;cls&quot;);\n            Password pass;\n            pass.Entrance();\n        }\n        if (punkt == 2)\n        {\n            system(&quot;cls&quot;);\n            Password pass;\n            pass.Sign_up();\n        }\n        return 0;\n    }\n};\nint main()\n{\n    setlocale(LC_ALL, &quot;ru&quot;);\n\n    menu Menu;\n\n    Menu.RunMenu();\n\n    return 0;\n}\n</code></pre>\n<p>I tried two methods but it didn't work.</p>\n"
    },
    {
      "id": 76045198,
      "tags": ["sql"],
      "owner": {
        "account_id": 18619566,
        "reputation": 1,
        "user_id": 13570111,
        "user_type": "registered",
        "profile_image": "https://lh6.googleusercontent.com/-Ou6E2i78r4I/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmJfSPAwu5LtVNmqdFUnGmpz1WkCg/photo.jpg?sz=256",
        "display_name": "Daniel Yacob",
        "link": "https://stackoverflow.com/users/13570111/daniel-yacob"
      },
      "is_answered": false,
      "view_count": 27,
      "answer_count": 0,
      "score": -2,
      "last_activity_date": 1681825641,
      "creation_date": 1681824478,
      "last_edit_date": 1681824619,
      "question_id": 76045198,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045198/running-total-month-to-month",
      "title": "Running total month to month",
      "body": "<p>I have year parameter in SSRS that diplay active contract counts month to month. I want toget the running total of these contract and that is depending on the expireation date.\nHere is a sample table</p>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th>Contract</th>\n<th>StartDate</th>\n<th>ExpireDate</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1001</td>\n<td>03/01/2022</td>\n<td>04/01/2022</td>\n</tr>\n<tr>\n<td>1002</td>\n<td>03/01/2022</td>\n<td>05/01/2022</td>\n</tr>\n<tr>\n<td>1003</td>\n<td>04/01/2022</td>\n<td>01/01/2023</td>\n</tr>\n<tr>\n<td>1004</td>\n<td>04/01/2022</td>\n<td>01/01/2023</td>\n</tr>\n<tr>\n<td>1005</td>\n<td>05/01/2022</td>\n<td>01/01/2023</td>\n</tr>\n<tr>\n<td>1006</td>\n<td>05/01/2022</td>\n<td>01/01/2023</td>\n</tr>\n<tr>\n<td>1007</td>\n<td>05/01/2022</td>\n<td>01/01/2023</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>The expection of the</p>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th>Count</th>\n<th>MonthName</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>March</td>\n</tr>\n<tr>\n<td>3</td>\n<td>April</td>\n</tr>\n<tr>\n<td>5</td>\n<td>May</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>April count 3 because contract 1001 expire in April and May is 5 contract 1002 is expired and so on</p>\n"
    },
    {
      "id": 76045299,
      "tags": ["c++", "algorithm", "overlap", "minimum"],
      "owner": {
        "account_id": 28339793,
        "reputation": 1,
        "user_id": 21672987,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/3400d1110d3e29f9c0d959c182f78ec5?s=256&d=identicon&r=PG&f=y&so-version=2",
        "display_name": "dbzVegeta87",
        "link": "https://stackoverflow.com/users/21672987/dbzvegeta87"
      },
      "is_answered": false,
      "view_count": 29,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681825058,
      "creation_date": 1681825058,
      "question_id": 76045299,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045299/issues-with-algorithm-that-return-least-number-of-matching-elements-from-a-list",
      "title": "Issues with Algorithm that return least number of matching elements from a list of data sets",
      "body": "<p>I have to implement a Minimum Overlap Coverage algorithm which takes in a cover (list of ints), goes through a file of data sets (all integers), collects the smallest number of data sets that contain all of the elements from the input and returns the minimum number of elements.</p>\n<p>My teacher provided us with this pseudo code:</p>\n<pre><code>unsigned int findMinimumOverlap (SOFAR, INPUT, bool print) const {\n unsigned int min = UINT_MAX;\n\n for each set, S, in the set file that is not in SOFAR {\n     RESULT = INPUT excluding that values in S\n     Add (e.g., append) S to SOFAR\n     if (RESULT is empty) { // A cover was found\n     \n     if (SOFAR has fewer students selected than min) {\n         min = the size of SOFAR.\n     }\n    }\n else { //didn't find a cover yet, so try with what is left\n      // Recursively call with S\n      const int cmin = findMinimumOverlap(SOFAR, RESULT, print);\n      // If the newly found min is smaller, then update min.\n      if (cmin &lt; min) {\n        min = cmin;\n      }\n    }\n    REMOVE S from SOFAR so we can evaluate the next S.\n    return min;\n }\n</code></pre>\n<p>This is what I have:</p>\n<pre><code>`#include &quot;MinimumOverlap.hpp&quot;\ninclude &lt;climits&gt;\n#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;sstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;set&gt;\nMinimumOverlap::MinimumOverlap(const std::string&amp; setFile) {\n\nstd::ifstream inFile(setFile);\nstd::string line;\n\n//read file and push each line of ints into oneSet vector\nwhile (std::getline(inFile, line)) {\n\n    std::istringstream iss(line);\n    std::vector&lt;int&gt; oneSet;\n    int value;\n    while (iss &gt;&gt; value) {\n        oneSet.push_back(value);\n    }\n\n\n\n    //add data sets to master list of sets\n    listOfSets.push_back(oneSet);\n\n    }\n   }\n\nunsigned int MinimumOverlap::findMinimumOverlap(const std::vector&lt;int&gt;&amp; cover, const bool&amp; print) const {\nstd::vector&lt;std::vector&lt;int&gt;&gt; sofar(cover.size()); //chosen sets from list of sets that contain cover elements (initially empty)\nreturn findMinimumOverlap(sofar, cover, print);\n   }\n\n unsigned int MinimumOverlap::findMinimumOverlap(const std::vector&lt;std::vector&lt;int&gt;&gt;&amp; sofar, const std::vector&lt;int&gt; &amp; input, const bool &amp;print) const {\n\nunsigned int min = UINT_MAX;\nstd::vector&lt;std::vector&lt;int&gt;&gt; newSofar = sofar;\n\n//  for each set, S, in the set file that is not in SOFAR {\n// sofar should initially be empty \nfor (const auto&amp; s : listOfSets) {\n    bool found = false;\n\n    for (const auto&amp; element : s) { //iterate over elements in s, ex. {x, y, z}\n\n        for (const auto&amp; innerVec : newSofar) { // iterate over the inner vectors\n            for (const auto&amp; val : innerVec) { // iterate over the values in each inner vector\n                if (val == element) { // check if the value matches the element\n                    found = true;\n                    break;\n                }\n            }\n            if (found) {\n                break;\n            }\n        }\n    }\n    \n    if (found) {\n        continue; //this means continue to next loop, not continue in code\n\n    }  //if element found in sofar, go to next set, s, in list of sets\n\n\n    //  RESULT = INPUT excluding that values in S\n    std::vector&lt;int&gt; result;\n    result.clear();\n    result.reserve(input.size());\n\n    std::vector&lt;int&gt; s_copy = s;\n    std::vector&lt;int&gt; input_copy = input;\n\n    std::sort(s_copy.begin(), s_copy.end());\n    std::sort(input_copy.begin(), input_copy.end());\n    std::set_difference(input_copy.begin(), input_copy.end(), s_copy.begin(), s_copy.end(), std::inserter(result, result.end()));\n\n\n    //  Add (e.g., append) S to SOFAR\n    newSofar.push_back(s);\n\n\n    //  if (RESULT is empty) { // A cover was found\n    if (result.empty()) {\n\n        unsigned int sum = 0;\n        for (const auto&amp; v : newSofar) {\n            sum += v.size();\n        }\n        if (sum &lt; min) {\n            min = sum;\n        }\n\n    } else {\n        const int cmin = findMinimumOverlap(newSofar, result, false);\n        if (cmin &lt; min) {\n            min = cmin;\n        }\n    }\n\n    // if (print){\n    //     printCover(input);\n    // }\n    \n    newSofar.pop_back();\n\n}\n\nreturn min;\n}\n\nvoid MinimumOverlap::printCover(const std::vector&lt;int&gt;&amp; cover) const {\n   std::cout &lt;&lt; &quot;Cover: { &quot;;\n   for (const auto&amp; x : cover) {\n       std::cout &lt;&lt; x &lt;&lt; &quot; &quot;;\n   }\n   std::cout &lt;&lt; &quot;}&quot; &lt;&lt; std::endl;\n}`\n</code></pre>\n<p>My header file:</p>\n<pre><code>`#ifndef MinimumOverlap_HPP\n#define MinimumOverlap_HPP\n\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_set&gt;\n\nclass MinimumOverlap {\npublic:\n\n// Passes in a string pointing to the set/group file.\n// Make sure you store all the sets/groups!\nMinimumOverlap(const std::string &amp;setFile);\n\n// Returns the minimum number of overlaps possible given a cover.\n// If print is true, it prints the set(s).\nunsigned int findMinimumOverlap(const std::vector&lt;int&gt; &amp;cover, const bool &amp;print) const;\n\nprivate:\n\nstd::vector&lt;std::vector&lt;int&gt;&gt; listOfSets; //master list of data sets read into file\n\nunsigned int findMinimumOverlap(const std::vector&lt;std::vector&lt;int&gt;&gt;&amp; sofar, const std::vector&lt;int&gt; &amp; input, const bool &amp;print) const;\nvoid printCover(const std::vector&lt;int&gt;&amp; cover) const;\n\n};\n\n#endif`\n</code></pre>\n<p>When I try it with small covers such as,</p>\n<pre><code>`1234\n\n 0123\n\n 024`\n</code></pre>\n<p>And use it to search a smaller data file such as,</p>\n<pre><code>`0 2 5 \n\n 0 2 3\n\n 1\n\n 2 3 6\n\n 1 4 3\n\n 5 6`\n</code></pre>\n<p>everything works fine.</p>\n<p>When I use bigger covers with bigger data sets it says that it can't find the minimums which means that the result variable is never empty and the minimum variable is never updated even though it's data provided by the teacher so it should match up. I know it's probably not the most memory efficient program since it does recursion so many times. We're graded on how fast it works but I just want to get it working all the way through then I'll figure that part out later. If anyone has tips on how to get it working more efficiently that would help as well.</p>\n<p>I'm not sure if I provided enough info for this to be a sufficient question(this is my first time posting here) but I'm really stumped on this and my teacher isn't helping much.</p>\n<p>The first minimum overlap function is provided by the teacher and we're not able to change it fyi but I can change the recursive helper function as much as necessary.</p>\n<p>My teacher has a main.cpp file that returns &quot;does not exist&quot; when the minimum isn't found. This is as far as I've gotten in my code and I am totally stumped on why it doesn't work for the bigger data sets</p>\n"
    },
    {
      "id": 76045397,
      "tags": ["python", "loops", "for-loop"],
      "owner": {
        "account_id": 13565869,
        "reputation": 1,
        "user_id": 9785940,
        "user_type": "registered",
        "profile_image": "https://lh6.googleusercontent.com/-n17I0cqLyA0/AAAAAAAAAAI/AAAAAAAAJAE/uRyD1WOCb5c/photo.jpg?sz=256",
        "display_name": "sizura Ramadhani",
        "link": "https://stackoverflow.com/users/9785940/sizura-ramadhani"
      },
      "is_answered": false,
      "view_count": 27,
      "closed_date": 1681825919,
      "answer_count": 0,
      "score": -4,
      "last_activity_date": 1681825773,
      "creation_date": 1681825609,
      "last_edit_date": 1681825773,
      "question_id": 76045397,
      "link": "https://stackoverflow.com/questions/76045397/why-my-print-code-doesnt-appear-when-i-add-the-systemclear-below-my-print",
      "closed_reason": "Not suitable for this site",
      "title": "why my print() code doesn&#39;t appear when i add the system(&quot;clear) below my print",
      "body": "<p>when I add a for loop in the case and add os.system('clear') below it the code above which print() doesn't run</p>\n<p>I want to print various shapes and do them alternately according to what the user wants, so there are options like 1.print a diamond shapes, 2.print a triangle shapes and more, but at that time the previous options were restarted</p>\n"
    },
    {
      "id": 76045451,
      "tags": ["c#", "sql-server", "visual-studio", "entity-framework"],
      "owner": {
        "account_id": 15000581,
        "reputation": 51,
        "user_id": 10828385,
        "user_type": "registered",
        "profile_image": "https://i.stack.imgur.com/LtJEZ.png?s=256&g=1",
        "display_name": "Mehran",
        "link": "https://stackoverflow.com/users/10828385/mehran"
      },
      "is_answered": false,
      "view_count": 27,
      "closed_date": 1681826476,
      "answer_count": 0,
      "score": -1,
      "last_activity_date": 1681826035,
      "creation_date": 1681825947,
      "last_edit_date": 1681826035,
      "question_id": 76045451,
      "link": "https://stackoverflow.com/questions/76045451/how-can-i-use-internal-database",
      "closed_reason": "Needs more focus",
      "title": "How can I use internal database",
      "body": "<p>I publish my program in c# VS,i have a database(sql server) that connected to my program (I used EntityFramework). When I publish my program and use that on another PC I must install SQL Server and create a database for running my program.</p>\n<p>How can I make a internal database and install my program and use that without installing SQL server on another PC.</p>\n"
    },
    {
      "id": 76045351,
      "tags": ["rust"],
      "owner": {
        "account_id": 480174,
        "reputation": 12432,
        "user_id": 893254,
        "user_type": "registered",
        "accept_rate": 30,
        "profile_image": "https://www.gravatar.com/avatar/e4417c43fd253cd5b52e2dd709e34b44?s=256&d=identicon&r=PG&f=1",
        "display_name": "FreelanceConsultant",
        "link": "https://stackoverflow.com/users/893254/freelanceconsultant"
      },
      "is_answered": true,
      "view_count": 18,
      "answer_count": 1,
      "score": 0,
      "last_activity_date": 1681825610,
      "creation_date": 1681825346,
      "question_id": 76045351,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045351/does-a-rust-for-in-for-of-loop-cause-reassignment-of-a-container",
      "title": "Does a Rust for-in (for-of) loop cause reassignment of a container?",
      "body": "<p>Consider the following for-in loop in Rust, which moves the non-privative data type <code>String</code>.</p>\n<pre><code>let strings: Vec&lt;String&gt; = something;\nfor s in strings {\n    // uses `s`\n}\n</code></pre>\n<p>Since a String is not a bitwise trivially copyable datatype, the elements of <code>strings</code> are moved, one by one, into <code>s</code> and then dropped at the end of the block defined by <code>{</code> and <code>}</code>.</p>\n<h4>After each iteration, what does the <code>Vec</code> object look like?</h4>\n<p>Imaging that <code>strings</code> is initialized to contain this:</p>\n<pre><code>[ &quot;hello&quot;, &quot;world&quot;, &quot;final string&quot; ]\n</code></pre>\n<p>After 1 iteration of the loop, the element <code>&quot;hello&quot;</code> has been moved.</p>\n<p>We cannot have a <code>Vec</code> now looking like this</p>\n<pre><code>[ None, &quot;world&quot;, &quot;final string&quot; ]\n</code></pre>\n<p>because <code>None</code> is not a <code>String</code>.</p>\n<p>This means the <code>Vec</code> must now be shorter:</p>\n<pre><code>[ &quot;world&quot;, &quot;final string&quot; ]\n</code></pre>\n<p>Since <code>&quot;hello&quot;</code> was removed from the front of the <code>Vec</code> this strongly suggests to me that a re-allocation has taken place.</p>\n<p><strong>If this is not the case, then why does no re-allocation occur.</strong></p>\n<p>AFAIK <code>Vec</code> does not contain something like an offset to the first element in memory, like a C++ <code>std::deque</code> would. So it seem to me that Rust <code>Vec</code> cannot avoid a re-allocation when the first element is moved.</p>\n<p>Finally, assuming I have understood all of the above, which may not be the case, does this mean that iterating over a <code>Vec</code> containing not-copyable objects is <em>slow</em> ?</p>\n"
    },
    {
      "id": 76045103,
      "tags": ["python", "python-3.x", "pygame"],
      "owner": {
        "account_id": 28339309,
        "reputation": 1,
        "user_id": 21672572,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/6eb639ec2656fa6f1c83c30eca45caf5?s=256&d=identicon&r=PG&f=y&so-version=2",
        "display_name": "alhnesn",
        "link": "https://stackoverflow.com/users/21672572/alhnesn"
      },
      "is_answered": false,
      "view_count": 26,
      "closed_date": 1681826426,
      "answer_count": 0,
      "score": -2,
      "last_activity_date": 1681825489,
      "creation_date": 1681823858,
      "question_id": 76045103,
      "link": "https://stackoverflow.com/questions/76045103/how-can-i-add-background-music-to-the-console-with-python",
      "closed_reason": "Duplicate",
      "title": "How can I add background music to the console with Python?",
      "body": "<p>I wan't to make a text-based game played from the console with Python but I could't figure out how to add background music to it.</p>\n<p>I tried to use Pygame but I think Pygame automatically closes the console when I don't create a window. It worked on Pycharm but when I try to run it from the console it instantly closes.</p>\n<pre><code>from pygame import mixer\nmixer.init()\n\n\ndef play_sound(file_path):\n    bg_sound = mixer.Sound(file_path)\n    bg_sound.set_volume(0.5)\n    bg_sound.play()\n\n\nplay_sound(&quot;anything.mp3&quot;)\ninput()\n</code></pre>\n"
    },
    {
      "id": 76044992,
      "tags": ["c++", "templates", "specialization"],
      "owner": {
        "account_id": 2251205,
        "reputation": 4270,
        "user_id": 1983409,
        "user_type": "registered",
        "accept_rate": 50,
        "profile_image": "https://i.stack.imgur.com/20Ow9.png?s=256&g=1",
        "display_name": "zdf",
        "link": "https://stackoverflow.com/users/1983409/zdf"
      },
      "is_answered": false,
      "view_count": 27,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681824345,
      "creation_date": 1681823179,
      "last_edit_date": 1681824345,
      "question_id": 76044992,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76044992/instantiate-different-specialization-with-the-same-parameters",
      "title": "Instantiate different specialization with the same parameters",
      "body": "<p>Consider the class below. I would like to use sometimes the first specialization and sometimes the second, but <strong>with the same template arguments</strong>.</p>\n\n<pre><code>#include &lt;vector&gt;\n\nusing namespace std;\n\n// 1\ntemplate &lt; typename U, typename V &gt;\nclass C\n{\npublic: C() {}\n};\n\n// 2\ntemplate &lt; typename U, typename VT, typename VA &gt;\nclass C&lt; U, vector&lt;VT, VA&gt; &gt;\n{\npublic: C() {}\n};\n\n// 3\ntemplate &lt; typename UT, typename UA, typename VT, typename VA &gt;\nclass C&lt; vector&lt;UT, UA&gt;, vector&lt;VT, VA&gt; &gt;\n{\npublic: C() {}\n};\n\nint main() \n{\n  C&lt;int, int&gt; a; // 1st\n  C&lt;int, vector&lt;int&gt;&gt; b; // 2nd\n  C&lt;vector&lt;int&gt;, vector&lt;int&gt;&gt; c; // 3rd\n  C&lt;vector&lt;int&gt;, vector&lt;int&gt;&gt; d; // 2nd; how?\n}\n</code></pre>\n"
    },
    {
      "id": 1681971235184,
      "tags": ["javascript"],
      "owner": {
        "account_id": 123456789,
        "reputation": 0,
        "user_id": 123456789,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Gil-Dong Hong",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681971235184,
      "creation_date": 1681971235184,
      "last_edit_date": 1681971235184,
      "question_id": 1681971235184,
      "content_license": "CC BY-SA 4.0",
      "link": "https://localhost:3000/questions/1681971235184",
      "title": "Test Question!",
      "body": "<p>yes. this is test</p>"
    },
    {
      "id": 1682036604200,
      "tags": ["javascript", "abc"],
      "owner": {
        "account_id": 123456789,
        "reputation": 0,
        "user_id": 123456789,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Gil-Dong Hong",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 0,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1682036604200,
      "creation_date": 1682036604200,
      "last_edit_date": 1682036604200,
      "question_id": 1682036604200,
      "content_license": "CC BY-SA 4.0",
      "link": "https://localhost:3000/questions/1682036604200",
      "title": "ì§ë¬¸ìì´ì!",
      "body": "<p>ë­ëª¨ë¥´ëì§ë¥¼ëª¨ë¥´ê² ì´ìííí</p>"
    },
    {
      "id": 20,
      "question_id": 20,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 21,
      "question_id": 21,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 22,
      "question_id": 22,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 23,
      "question_id": 23,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 24,
      "question_id": 24,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 25,
      "question_id": 25,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 26,
      "question_id": 26,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 27,
      "question_id": 27,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 28,
      "question_id": 28,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 29,
      "question_id": 29,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 30,
      "question_id": 30,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 31,
      "question_id": 31,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 32,
      "question_id": 32,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 33,
      "question_id": 33,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 34,
      "question_id": 34,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 35,
      "question_id": 35,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 36,
      "question_id": 36,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 37,
      "question_id": 37,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 38,
      "question_id": 38,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 39,
      "question_id": 39,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 40,
      "question_id": 40,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 41,
      "question_id": 41,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 42,
      "question_id": 42,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 43,
      "question_id": 43,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 44,
      "question_id": 44,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 45,
      "question_id": 45,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 46,
      "question_id": 46,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 47,
      "question_id": 47,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 48,
      "question_id": 48,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 49,
      "question_id": 49,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 50,
      "question_id": 50,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 51,
      "question_id": 51,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 52,
      "question_id": 52,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 53,
      "question_id": 53,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 54,
      "question_id": 54,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 55,
      "question_id": 55,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 56,
      "question_id": 56,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 57,
      "question_id": 57,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 58,
      "question_id": 58,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 59,
      "question_id": 59,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 60,
      "question_id": 60,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 61,
      "question_id": 61,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 62,
      "question_id": 62,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 63,
      "question_id": 63,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 64,
      "question_id": 64,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 65,
      "question_id": 65,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 66,
      "question_id": 66,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 67,
      "question_id": 67,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 68,
      "question_id": 68,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 69,
      "question_id": 69,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 70,
      "question_id": 70,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 71,
      "question_id": 71,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 72,
      "question_id": 72,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 73,
      "question_id": 73,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 74,
      "question_id": 74,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 75,
      "question_id": 75,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 76,
      "question_id": 76,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 77,
      "question_id": 77,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 78,
      "question_id": 78,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 79,
      "question_id": 79,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 80,
      "question_id": 80,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 81,
      "question_id": 81,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 82,
      "question_id": 82,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 83,
      "question_id": 83,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 84,
      "question_id": 84,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 85,
      "question_id": 85,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 86,
      "question_id": 86,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 87,
      "question_id": 87,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 88,
      "question_id": 88,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 89,
      "question_id": 89,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 90,
      "question_id": 90,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 91,
      "question_id": 91,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 92,
      "question_id": 92,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 93,
      "question_id": 93,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 94,
      "question_id": 94,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 95,
      "question_id": 95,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 96,
      "question_id": 96,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 97,
      "question_id": 97,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 98,
      "question_id": 98,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 99,
      "question_id": 99,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    },
    {
      "id": 100,
      "question_id": 100,
      "tags": ["javascript", "chart.js", "nan"],
      "owner": {
        "account_id": 25464408,
        "reputation": 71,
        "user_id": 19263679,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhAoTHeWPDnkDv7atnHxEBdRBFn4OYq1Np_d1j4=k-s256",
        "display_name": "Kayd Anderson",
        "link": "https://stackoverflow.com/users/19263679/kayd-anderson"
      },
      "is_answered": false,
      "view_count": 28,
      "answer_count": 0,
      "score": 0,
      "last_activity_date": 1681826705,
      "creation_date": 1681826527,
      "last_edit_date": 1681826705,
      "content_license": "CC BY-SA 4.0",
      "link": "https://stackoverflow.com/questions/76045555/why-am-i-getting-nan-on-one-out-of-every-string-of-numbers",
      "title": "Why am I getting NaN on one out of every string of numbers?",
      "body": "<p>I'm a complete beginner to JavaScript, I have a springboot project for discgolf, and have an accordion for each course, which opens to all rounds played for a user. I'm creating n horizontal barcharts and passing a round to JavaScript to render the chart using chart js.</p>\n<p>html (round coming from a th:each)</p>\n<pre><code>&lt;div class=&quot;container-fluid&quot;&gt;\n    &lt;canvas th:data-counts=&quot;${round}&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n</code></pre>\n<p>my chart JavaScript</p>\n<pre><code>const charts = document.querySelectorAll('[data-counts]');\n      charts.forEach(chart =&gt; {\n        const countsTest = chart.getAttribute('data-counts').split(',');\n\n        const counts = {};\n\n        for (let i = 0; i &lt; countsTest.length; i++) {\n          const num = parseInt(countsTest[i]);\n          counts[num] = counts[num] ? counts[num] + 1 : 1;\n        }\n\n\n        console.log(countsTest); // Log the countsTest array\n        console.log(counts); // Log the counts object\n\n        const oldChart = chart.chart;\n        if (oldChart) {\n          oldChart.destroy();\n        }\n\n        const myChart = new Chart(chart, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            indexAxis: 'y',\n            scales: {\n              x: {\n                stacked: true,\n                display: false\n              },\n              y: {\n                stacked: true,\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          },\n          data: {\n            labels: [&quot;Score&quot;],\n            datasets: [{\n              data: [counts[2] || 0],\n              backgroundColor: &quot;#77ACD8&quot;\n            }\n            ,{\n              data: [counts[3] || 0]\n\n            },{\n              data: [counts[4] || 0],\n              backgroundColor: &quot;#FDC26A&quot;\n            },{\n              data: [counts[5] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            },{\n              data: [counts[6] || 0, counts[7] || 0, counts[8] || 0, counts[9] || 0, counts[10] || 0],\n              backgroundColor: &quot;#FCAE37&quot;\n            }\n            ]\n          }\n        });\n        chart.chart = myChart;\n      });\n</code></pre>\n<p>Round data in the console</p>\n<pre><code>['Round{roundId=19', ' course=Course{id=1', &quot; name='Legende'&quot;, ' holes=[Hole{holeId=37', ' number=1', ' par=3}', ' Hole{holeId=38', ' number=2', ' par=3}', ' Hole{holeId=39', ' number=3', ' par=3}', ' Hole{holeId=40', ' number=4', ' par=3}', ' Hole{holeId=41', ' number=5', ' par=3}', ' Hole{holeId=42', ' number=6', ' par=3}', ' Hole{holeId=43', ' number=7', ' par=3}', ' Hole{holeId=44', ' number=8', ' par=3}', ' Hole{holeId=45', ' number=9', ' par=3}]', ' par=27', ' record=-2', ' courseAverage=27.238095238095237}', ' scores=[Score{scoreId=181', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=182', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=183', ' score=4', ' holePar=3', &quot; name='Bogie'&quot;, &quot; color='#FBD59C'}&quot;, ' Score{scoreId=184', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=185', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=186', ' score=2', ' holePar=3', &quot; name='Birdie'&quot;, &quot; color='#77ACD8'}&quot;, ' Score{scoreId=187', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=188', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}&quot;, ' Score{scoreId=189', ' score=3', ' holePar=3', &quot; name='Par'&quot;, &quot; color='#eee'}]&quot;, ' roundDate=2023-03-04 00:00:00.0', ' total=26', ' barChartArray=[2', ' 4', ' 4', ' 2', ' 3', ' 2', ' 3', ' 3', ' 3]}']\n</code></pre>\n<p>Honestly I'm not sure how the scores are getting to the barchart but its kind of working but I'm still getting a NaN for one of the scores in each round. The screen shot shows the correct score card but each chart is wrong by one number, it also shows the output in the console. As you can see there are 3: 2s in the scorecard, but on the barchart there is only 2. {2: 2, 3: 4, 4: 2, NaN: 81})</p>\n<p>So how do I use the scores object inside a round to create the chart? So use score.score or barChartArray for the numbers, for the label score.name and for the color <code>score.color</code>.</p>\n<p></p>\n"
    }
  ]
}
